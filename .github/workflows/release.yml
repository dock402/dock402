name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release (defaults to package.json)
        required: false
  workflow_run:
    workflows: ["Publish Package"]
    types: [completed]

jobs:
  create_or_update_release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main')
    permissions:
      contents: write
    steps:
      - name: Checkout (workflow_run)
        if: github.event_name == 'workflow_run'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Checkout (manual)
        if: github.event_name != 'workflow_run'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read version from package.json (or input)
        id: pkg
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Compute tag
        id: tag
        run: |
          echo "tag=v${{ steps.pkg.outputs.version }}" >> "$GITHUB_OUTPUT"

      - name: Build release notes body
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          VERSION="${{ steps.pkg.outputs.version }}"
          NPM_URL="https://www.npmjs.com/package/$PACKAGE_NAME"
          cat > RELEASE_BODY.md <<EOF
          ## Changes

          This release was automatically generated from the latest changes merged to main.

          ### Package Information
          - **Package**: $PACKAGE_NAME
          - **Version**: $VERSION
          - **NPM**: $NPM_URL

          For detailed changes, please see the commit history.
          EOF

      - name: Configure Git identity
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Ensure git tag exists remotely
        env:
          TAG: ${{ steps.tag.outputs.tag }}
        run: |
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG exists locally."
          else
            echo "Creating local tag $TAG..."
            git tag -a "$TAG" -m "Release $TAG"
          fi
          git push origin "$TAG" || echo "Tag $TAG already exists on remote; continuing."

      - name: Create or update GitHub release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.tag.outputs.tag }}
        run: |
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG exists; updating title and notes."
            gh release edit "$TAG" \
              --title "Release $TAG" \
              --notes-file RELEASE_BODY.md
          else
            echo "Creating release $TAG."
            gh release create "$TAG" \
              --title "Release $TAG" \
              --notes-file RELEASE_BODY.md \
              --latest
          fi


